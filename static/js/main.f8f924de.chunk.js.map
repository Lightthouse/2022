{"version":3,"sources":["routes/index.ts","pages/Home/Home.styled.ts","utils/utils.ts","hooks/useAppSelector.ts","components/Hr/Hr.styled.ts","store/entity/slice.ts","store/index.ts","hooks/useActions.ts","assets/bp.jpg","pages/Edit/Edit.styled.ts","components/Title/Title.styled.ts","components/Title/Title.tsx","components/EditBlock/EditBlock.ts","components/EditButton/EditButton.styled.ts","components/EditButton/EditButton.tsx","components/AddInput/AddInput.styled.ts","components/AddingContainer/AddingContainer.styled.ts","components/AddButton/AddButton.styled.ts","components/AddButton/AddButton.tsx","components/RemoveButton/RemoveButton.styled.ts","components/RemoveButton/RemoveButton.tsx","pages/Edit/Person/Person.styled.ts","pages/Edit/Person/Person.tsx","components/EntityContainer/EntityContainer.styled.ts","components/EntityName/EntityName.styled.ts","pages/Edit/Stuff/Stuff.tsx","pages/Edit/Food/Food.tsx","pages/Edit/Music/Music.tsx","components/HomeToy/HomeToy.styled.ts","components/HomeToy/HomeToy.tsx","pages/Edit/Note/Note.tsx","pages/Home/Home.tsx","pages/Edit/Edit.tsx","components/AppRouter.tsx","index.tsx"],"names":["PathList","HomeStyled","styled","div","Title","h1","PartyInfo","PersonContainer","Person","figure","PersonPhoto","img","PersonName","figcaption","Timer","Contacts","SettingsLink","a","Telegram","Phone","props","phoneShow","newYearDate","nextYear","dayjs","year","month","date","hour","minute","second","toDate","useAppSelector","useSelector","Hr","hr","slice","createSlice","name","initialState","person","id","photo","food","volume","count","music","author","stuff","note","reducers","set","state","action","payload","add","fillingType","push","value","localStorage","setItem","JSON","stringify","remove","filter","i","store","configureStore","reducer","filling","allActions","actions","useActions","dispatch","useDispatch","bindActionCreators","EditStyled","bgi","Dump","TitleStyled","h2","children","EditBlock","EditButtonStyled","button","EditButton","editStateFunc","onClick","AddInput","input","AddingContainer","editMode","AddButtonStyled","AddButton","saveFunc","RemoveButtonStyled","RemoveButton","removeFunc","editState","Photo","span","PersonInfo","PersonList","TYPE","useState","isEdit","setIsEdit","personName","setPersonName","photoEvent","setPhotoEvent","savePerson","selectedFile","target","files","reader","FileReader","onload","personPhoto","rs","result","nanoid","readAsDataURL","map","p","personId","type","onChange","e","placeholder","onKeyUp","key","EntityContainer","EntityName","Stuff","stuffName","setStuffName","stuffCount","setStuffCount","enterTrack","saveTrack","s","stuffId","Food","setEdit","foodName","setFoodName","foodVolume","setFoodVolume","foodCount","setFoodCount","enterFood","saveFood","f","foodId","Music","setAuthor","track","setTrack","m","trackId","shroudAnimation","keyframes","Shroud","House","HomeToy","href","Note","noteList","setNote","saveNote","n","noteId","routesList","path","HOME","exact","component","useTimer","expiryTimestamp","onExpire","console","log","seconds","minutes","hours","days","loaded","setLoaded","setPhoneShow","twoDigits","num","stringNum","String","length","personList","useEffect","storageData","getItem","parse","src","alt","prev","phoneNumber","FOOD","allData","document","createElement","URL","createObjectURL","Blob","setAttribute","body","appendChild","click","removeChild","AppRouter","r","to","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f8f924de.chunk.js","sourcesContent":["import React, {FC, ReactElement} from \"react\";\nimport {Home} from \"pages/Home/Home\";\nimport {Edit} from \"pages/Edit/Edit\";\n\ninterface Route {\n    path: string,\n    component: FC,\n    exact: true\n}\n\nenum PathList {\n    HOME = \"/\",\n    FOOD = \"/edit\"\n}\n\nexport const routesList: Array<Route> = [\n    {path: PathList.HOME, exact: true, component: Home},\n    {path: PathList.FOOD, exact: true, component: Edit},\n]","import styled from \"styled-components\";\n\n\nexport const HomeStyled = styled.div`\n  background-color: navajowhite;\n  background-image: url(\"https://storge.pic2.me/upload/735/54881b0b81364.jpg\");\n  background-repeat: no-repeat;\n  background-size: cover;\n  display: flex;\n  flex-direction: column;\n  //flex-wrap: nowrap;\n  justify-content: space-between;\n  align-items: center;\n  min-width: 100vw;\n  min-height: 100vh;\n\n\n`\n\nexport const Title = styled.h1`\n  background-color: navajowhite;\n  \n  border: 25px solid #B88846;\n  border-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='75' height='75'%3E%3Cg fill='none' stroke='%23B88846' stroke-width='2'%3E%3Cpath d='M1 1h73v73H1z'/%3E%3Cpath d='M8 8h59v59H8z'/%3E%3Cpath d='M8 8h16v16H8zM51 8h16v16H51zM51 51h16v16H51zM8 51h16v16H8z'/%3E%3C/g%3E%3Cg fill='%23B88846'%3E%3Ccircle cx='16' cy='16' r='2'/%3E%3Ccircle cx='59' cy='16' r='2'/%3E%3Ccircle cx='59' cy='59' r='2'/%3E%3Ccircle cx='16' cy='59' r='2'/%3E%3C/g%3E%3C/svg%3E\") 25;\n  \n  width: 14em;\n  text-align: center;\n\n\n\n  @media(max-width: 800px) {\n    font-size: 25px;\n    width: 16em;\n  }\n  \n\n  @media(max-width: 600px) {\n    font-size: 20px;\n    //width: 14em;\n  }\n  \n  @media(max-width: 400px) {\n    font-size: 16px;\n  }\n\n  @media(max-width: 300px) {\n    font-size: 14px;\n  }\n  \n\n`\n\nexport const Hat = styled.div`\n\n  \n    position: absolute;\n    left: 50%;\n    margin: 0 0 0 -50px;\n    width: 0;\n    height: 0;\n    border-style: solid;\n    border-width: 0 50px 110px 50px;\n    border-color: transparent transparent #a40000 transparent;\n    line-height: 0;\n    _border-color: #000000 #000000 #a40000 #000000;\n    _filter: progid:DXImageTransform.Microsoft.Chroma(color='#000000');\n  \n\n  :after {\n    content: '';\n    position: absolute;\n    width: 0;\n    height: 0;\n    border-style: solid;\n    border-width: 40px 0 0 100px;\n    border-color: transparent transparent transparent #a40000;\n\n    -webkit-transform: rotate(15deg);\n    -webkit-transform-origin: top left;\n\n    -moz-transform: rotate(15deg);\n    -moz-transform-origin: top left;\n\n    -ms-transform: rotate(15deg);\n    -ms-transform-origin: top left;\n\n    -o-transform: rotate(15deg);\n    -o-transform-origin: top left;\n\n    transform: rotate(15deg);\n    transform-origin: top left;\n  }\n\n  :before {\n    content: '';\n    position: absolute;\n    width: 16px;\n    height: 16px;\n    background: #fff;\n    left: 75px;\n    top: 55px;\n    -webkit-border-radius: 50%;\n    -moz-border-radius: 50%;\n    border-radius: 50%;\n    z-index: 1;\n  }\n`\n\nexport const PartyInfo = styled.div`\n  width: 12em;\n  background-color: #8e010a;\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  border: 0.3em solid black;\n  padding: 1em;\n  font-weight: bold;\n  white-space: nowrap;\n\n  @media(max-width: 600px) {\n    font-size: large;\n    width: 12em;\n  }\n  \n  @media(max-width: 350px) {\n    font-size: large;\n    width: 12em;\n  }\n`\n\nexport const PersonContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n\n`\nexport const Person = styled.figure`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  \n  margin: 2em 1em 3em 1em;\n\n  height: 10em;\n  width: 8em;\n  \n  text-align: center;\n  \n  animation: swing ease-in-out 2s infinite alternate;\n  transform-origin: center -20px;\n  float:left;\n  box-shadow: 5px 5px 10px rgba(0,0,0,0.5);\n\n\n  :after{\n    content: '';\n    position: absolute;\n    width: 20px; height: 20px;\n    border: 2px solid #999;\n    top: -10px; left: 50%;\n    z-index: 0;\n    border-bottom: none;\n    border-right: none;\n    transform: rotate(45deg);\n  }\n\n  :before{\n    content: '';\n    position: absolute;\n    width: 5px; height: 5px;\n    top: -14px;left: 54%;\n    z-index: 5;\n    border-radius: 50% 50%;\n    background: #000;\n  }\n\n  @keyframes swing {\n    0% { transform: rotate(10deg); }\n    100% { transform: rotate(-10deg); }\n  }\n\n  @media(max-width: 500px) {\n    height: 8em;\n    width: 7em;\n  }\n`\nexport const PersonPhoto = styled.img`\n  border: 5px solid #f8f8f8;\n  height: 100%;\n  object-fit: cover;\n\n`\nexport const PersonName = styled.figcaption`\n  width: 100%;\n  font-weight: bold;\n  color: navajowhite;\n`\n\nexport const Timer = styled.div`\n  background-color: navajowhite;\n  \n  width: 18em;\n  border: 25px solid #B88846;\n  border-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='75' height='75'%3E%3Cg fill='none' stroke='%23B88846' stroke-width='2'%3E%3Cpath d='M1 1h73v73H1z'/%3E%3Cpath d='M8 8h59v59H8z'/%3E%3Cpath d='M8 8h16v16H8zM51 8h16v16H51zM51 51h16v16H51zM8 51h16v16H8z'/%3E%3C/g%3E%3Cg fill='%23B88846'%3E%3Ccircle cx='16' cy='16' r='2'/%3E%3Ccircle cx='59' cy='16' r='2'/%3E%3Ccircle cx='59' cy='59' r='2'/%3E%3Ccircle cx='16' cy='59' r='2'/%3E%3C/g%3E%3C/svg%3E\") 25;\n  white-space: nowrap;\n  text-align: center;\n  margin-bottom: 1em;\n\n  @media(max-width: 600px) {\n    font-size: 18px;\n    width: 16em;\n  }\n\n  @media(max-width: 350px) {\n    font-size: 14px;\n  }\n`\n\nexport const Contacts = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: center;\n  margin-bottom: 10px;\n  align-items: center;\n`\nexport const SettingsLink = styled.a`\n  display: block;\n  width: 3.5em;\n  height: 3.5em;\n  background-image: url(\"https://www.nicepng.com/png/full/10-107944_circle-icons-tools-tools-circle-icon-png.png\");\n  background-size: cover;\n  background-position: center;\n  border-radius: 50%;\n  margin-left: 3px;\n\n`\nexport const Telegram = styled.a`\n  display: block;\n  width: 3.5em;\n  height: 3.5em;\n  background-image: url(\"https://media.wired.com/photos/600f12796a02aa6825bba609/125:94/w_2125,h_1598,c_limit/Science_telegram_1220060398.jpg\");\n  background-size: cover;\n  background-position: center;\n  border-radius: 50%;\n  transform: scale(-1, 1);\n  margin-left: 1em;\n`\nexport const Phone = styled('div')<{phoneNumber: string, phoneShow: boolean}>`\n  background-image: url(\"https://www.pinclipart.com/picdir/big/540-5401844_blue-circle-phone-icon-clipart.png\");\n  width: 3.5em;\n  height: 3.5em;\n  background-size: cover;\n  background-position: center;\n  border-radius: 50%;\n  margin-left: 1em;\n  margin-right: 2px;\n  cursor: pointer;\n\n  ${props => props.phoneShow && \n    `:after {\n        content: \"+7-(912) 388-35-38\";\n        background-color: dimgray;\n        position: relative;\n        top: 40%;\n        left: 110%;\n        font-weight: bold;\n        white-space: nowrap;\n  }`}\n\n\n\n`\n","import dayjs from \"dayjs\";\n\nexport const CONTACT_PHONE = \"+7-(912) 388-35-38\";\nexport const CONTACT_TELEGRAM = \"https://t.me/+Tadlw3QqJwk1ZTMy\";\nexport const ADDRESS = \"Мельникайте 2к3\";\nexport const MEETING_TIME = \"17:00\";\n\n\nexport let newYearDate = () => {\n    let nextYear = dayjs().year() + 1;\n    let nextNewYear = dayjs().year(nextYear).month(0).date(1).hour(0).minute(0).second(0)\n    return nextNewYear.toDate();\n};","import {appState} from \"../store\";\nimport {TypedUseSelectorHook, useSelector} from \"react-redux\";\n\nexport const useAppSelector: TypedUseSelectorHook<appState> = useSelector;\n\n","import styled from \"styled-components\";\n\nexport const Hr = styled.hr`\n  border: none;\n  height: 3px;\n  background: black;\n  width: 90%;\n`","import {createSlice} from \"@reduxjs/toolkit\";\n\ninterface CommonObj {\n    id: string\n    name: string\n}\n\ninterface PersonObj extends CommonObj{\n    photo: string\n}\n\ninterface FoodObj extends CommonObj{\n    volume?: string\n    count?: number\n}\n\n\ninterface MusicObj extends CommonObj{\n    author: string\n}\n\ninterface StuffObj extends CommonObj{\n    count: number\n}\n\ninterface NoteObj extends CommonObj{\n}\n\n\ninterface StateI {\n    person: PersonObj[]\n    food: FoodObj[]\n    music: MusicObj[]\n    stuff: StuffObj[]\n    note: NoteObj[]\n}\n\n\ntype fillingEntities = \"person\" | \"music\" | \"stuff\" | \"food\" | \"note\"\n\ntype Action = {payload: {fillingType: fillingEntities, value: any }}\n\nconst initState: StateI = {\n    person: [{id: \"1\", name: \"Степан\", photo: \"https://n1s1.elle.ru/89/25/c1/8925c155074d6a8c930c80823f6d705f/728x974_1_f0bb3f0f7fb8a1c9054b8b38495bd7cc@2243x3000_0xc0a839a4_2592546691474196282.jpeg\"}, {id: \"2\", name: \"Алексей\", photo: \"https://n1s2.starhit.ru/40/65/85/406585fbc2973466c027395eee2523ea/480x497_0_3fb193a83f594f412626a99b1373bd10@480x497_0xac120003_14492419171588864292.jpg\"}],\n    food: [{id: \"1\", name: \"Мандарины\", volume: \"2кг\"}, {id: \"2\", name: \"Шампанское\", volume: \"0.7л\", count: 3}],\n    music: [{id: \"1\", name: \"Let It Snow!\", author: \"Frank Sinatra\"}, {id: \"2\", name: \"Blue Christmas\", author: \"Elvis Presley\"}],\n    stuff: [{id: \"1\", name: \"Стулья\", count: 2}, {id: \"2\", name: \"Петарды\", count: 5}],\n    note: [{id: \"1\", name: \"Не сломать телевизор\"}]\n\n}\n\nexport const slice = createSlice({\n    name: \"filling\",\n    initialState: initState,\n    reducers: {\n\n        set(state, action) {\n          state.person = action.payload.person\n          state.food = action.payload.food\n          state.music = action.payload.music\n          state.stuff = action.payload.stuff\n          state.note = action.payload.note\n        },\n\n        add(state, action:Action) {\n            state[action.payload.fillingType].push(action.payload.value)\n            localStorage.setItem('state', JSON.stringify(state));\n        },\n        // update(state, action) {\n        //     state[action.payload.fillingType].push(action.payload.value)\n        // },\n\n        remove(state: { [key: string]: any[] }, action: Action) {\n            state[action.payload.fillingType] = state[action.payload.fillingType].filter(i => i.id !== action.payload.value)\n        },\n    }\n})\n\n","import { configureStore } from '@reduxjs/toolkit';\nimport {slice} from \"./entity/slice\";\n\nexport const store = configureStore({\n    reducer: {\n        filling: slice.reducer,\n    }\n})\n\nexport type appState = ReturnType<typeof store.getState>;\nexport const allActions = {...slice.actions}\n\n","import { useDispatch } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { allActions } from '../store';\n\nexport const useActions = () => {\n    const dispatch = useDispatch();\n    return bindActionCreators(allActions, dispatch);\n};\n\n","export default __webpack_public_path__ + \"static/media/bp.ce5cce42.jpg\";","import styled from \"styled-components\";\nimport bgi from \"assets/bp.jpg\"\n\n\nexport const EditStyled = styled.div`\n   min-width: 100vw;\n   min-height: 100vh;\n    \n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-around;\n    align-items: center;\n    \n    background-image: url(${bgi});\n    \n    word-break: break-all;\n  \n  //overflow: hidden;\n`\n\nexport const Dump = styled.div`\n  width: 2em;\n  height: 2em;\n  background-color: dimgray;\n  position: absolute;\n  border-radius: 50%;\n  cursor: progress;\n  opacity: 0;\n  bottom: 0;\n  right: 0;\n`","import styled from \"styled-components\";\n\nexport const TitleStyled = styled.h2`\n  text-align: center;\n  color: orange;\n  text-shadow: 4px 3px 4px black;\n`","import React, {FC} from 'react';\nimport {TitleStyled} from \"./Title.styled\";\n\nexport const Title: FC = (props) => {\n    return (\n        <TitleStyled>\n            {props.children}\n        </TitleStyled>\n    );\n};\n\n","import styled from \"styled-components\";\n\nexport const EditBlock = styled.div`\n  background-color: chocolate;\n  padding: 1em;\n  border-radius: 5%;\n  box-shadow: 6px 6px 20px 5px;\n  margin: 1em 1em 1em 1em;\n  width: 14em;\n\n  @media(max-width: 1400px) {\n    font-size: 20px;\n    width: 13em;\n  }\n  \n  @media(max-width: 700px) {\n    font-size: 20px;\n    width: 20em;\n  }\n  \n  @media(max-width: 500px) {\n    font-size: 17px;\n    width: 14em;\n  }\n  \n  @media(max-width: 400px) {\n    font-size: 17px;\n  }\n\n  @media(max-width: 300px) {\n    font-size: 15px;\n    width: 13em;\n  }\n\n\n`","import styled from \"styled-components\";\n\nexport const EditButtonStyled = styled.button`\n  padding: 1em;\n  background-color: khaki;\n  font-weight: bold;\n  box-shadow: 1px 3px 3px;\n  margin-top: 1em;\n  cursor: pointer;\n`","import {EditButtonStyled} from \"./EditButton.styled\";\n\n\nexport const EditButton = ({editStateFunc}: any) => {\n\n    return (\n        <EditButtonStyled onClick={editStateFunc}>\n            Изменить\n        </EditButtonStyled>\n    );\n};\n\n","import styled from \"styled-components\";\n\nexport const AddInput = styled.input`\n  width: 40%;\n  margin-left: 0;\n  background-color: chocolate;\n  border: none;\n  font-size: medium;\n\n\n  ::placeholder {\n    color: black;\n    text-align: center;\n    opacity: 0.6;\n  }`","import styled from \"styled-components\";\n\nexport const AddingContainer = styled('div')<{editMode: boolean}>`\n  width: 100%;\n  display: ${(props) => props.editMode ? `flex` : `none`};\n  justify-content: space-between;\n  align-items: baseline;\n`","import styled from \"styled-components\";\n\nexport const AddButtonStyled = styled.button`\n  background-color: chocolate;\n  border: none;\n  color: darkgreen;\n  font-size: xx-large;\n  font-weight: bold;\n  cursor: pointer;\n`","import React from 'react';\nimport {AddButtonStyled} from \"./AddButton.styled\";\n\nexport const AddButton = ({saveFunc}: addButtonProps) => {\n\n    return (\n\n        <AddButtonStyled onClick={saveFunc}>\n            +\n        </AddButtonStyled>\n    );\n};\n\n","import styled from \"styled-components\";\n\n\nexport const RemoveButtonStyled = styled('button')<{editMode: boolean}>`\n  visibility: ${(props => props.editMode ? `visible` : `hidden`)};\n  height: 1em;\n  width: 1em;\n  text-align: center;\n  border: none;\n  color: darkred;\n  font-size: xx-large;\n  font-weight: bold;\n  background-color: chocolate;\n  cursor: pointer;\n`","import React from 'react';\nimport {RemoveButtonStyled} from \"./RemoveButton.styled\";\n\nexport const RemoveButton = ({removeFunc, editState}: removeButtonProps) => {\n\n\n    return (\n        <RemoveButtonStyled onClick={removeFunc} editMode={editState}>\n            x\n        </RemoveButtonStyled>\n    );\n};\n\n","import styled from \"styled-components\";\n\nexport const Photo = styled('div')<{bgi: string}>`\n  background-image: ${props =>`url(${props.bgi})`} ;\n  width: 5em;\n  height: 5em;\n  background-size: cover;\n  background-position: center;\n  border-radius: 50%;\n  border: 3px solid black;\n`\n\nexport const PersonName = styled.span`\n  font-weight: bold;\n`\n\nexport const PersonInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nexport const PersonList = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`\n\nexport const Tmp = styled('div')<{bgi: string}>`\n  background-image: ${props => `url(${props.bgi})`};\n  width: 200px;\n  height: 200px;\n  border-radius: 50%;\n  \n  background-size: cover;\n\n`","import React, {SyntheticEvent, useState} from 'react';\nimport {useAppSelector} from \"hooks/useAppSelector\";\nimport {Title} from \"components/Title/Title\";\nimport {EditBlock} from \"components/EditBlock/EditBlock\";\nimport {EditButton} from \"components/EditButton/EditButton\";\nimport {AddInput} from \"components/AddInput/AddInput.styled\";\nimport {AddingContainer} from \"components/AddingContainer/AddingContainer.styled\";\nimport {AddButton} from \"components/AddButton/AddButton\";\nimport {RemoveButton} from \"components/RemoveButton/RemoveButton\";\nimport {PersonInfo, PersonList, PersonName, Photo} from \"./Person.styled\";\nimport {useActions} from \"hooks/useActions\";\nimport {nanoid} from \"@reduxjs/toolkit\";\n\nexport const Person = () => {\n    const TYPE = \"person\";\n\n    const person = useAppSelector(state => state.filling.person)\n    const {add, remove} = useActions()\n\n    const [isEdit, setIsEdit] = useState(false)\n    const [personName, setPersonName] = useState(\"\")\n    const [photoEvent, setPhotoEvent] = useState<any>()\n\n    const personIsFilled = () => personName && photoEvent\n    const enterPerson = (key: string) => {\n        if(key === 'Enter') {\n            savePerson();\n        }\n    }\n    const savePerson = () => {\n\n        if(personIsFilled()) {\n\n            let selectedFile = photoEvent?.target?.files[0];\n            let reader = new FileReader();\n\n            reader.onload = function(personPhoto) {\n                let rs = personPhoto?.target?.result\n                add({\n                    fillingType: TYPE,\n                    value: {\n                        id: nanoid(),\n                        name: personName,\n                        photo: rs\n                    }\n                })\n            };\n\n            reader.readAsDataURL(selectedFile);\n\n            setPersonName(\"\")\n            setPhotoEvent(null)\n        }\n    }\n    const removePerson = (personId: string) => {\n        remove({\n            fillingType: TYPE,\n            value: personId\n        })\n    }\n\n\n    const saveFile = (e: any) => {\n        let selectedFile = e.target.files[0];\n        let reader = new FileReader();\n\n        reader.onload = function(e) {\n            let rs = e?.target?.result\n            add({\n                fillingType: TYPE,\n                value: {\n                    id: nanoid(),\n                    name: personName,\n                    photo: rs\n                }\n            })\n        };\n\n        reader.readAsDataURL(selectedFile);\n\n    }\n\n    return (\n        <EditBlock>\n            <Title>Участники</Title>\n\n            <PersonList>\n                {\n                    person.map(p =>\n                        <PersonInfo key={p.id}>\n                            <Photo bgi={p.photo} />\n                            <PersonName>\n                                {p.name}\n                                <RemoveButton removeFunc={() => removePerson(p.id)} editState={isEdit}/>\n                            </PersonName>\n                        </PersonInfo>\n                    )\n                }\n            </PersonList>\n\n            <AddingContainer editMode={isEdit}>\n                <input type={\"file\"} onChange={(e) => setPhotoEvent(e)}/>\n                <AddInput type=\"text\" placeholder={\"Имя\"}\n                          value={personName}\n                          onKeyUp={(e) => enterPerson(e.key) }\n                          onChange={(e) => setPersonName(e.target.value)}/>\n                <AddButton saveFunc={savePerson}/>\n            </AddingContainer>\n\n            <EditButton editStateFunc={() => setIsEdit(!isEdit)} />\n        </EditBlock>\n    );\n};\n\n","import styled from \"styled-components\";\n\nexport const EntityContainer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n  \n`","import styled from \"styled-components\";\n\nexport const EntityName = styled.span`\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`","import React, {useState} from 'react';\nimport {useAppSelector} from \"hooks/useAppSelector\";\nimport {Title} from \"components/Title/Title\";\nimport {EditBlock} from \"components/EditBlock/EditBlock\";\nimport {EditButton} from \"components/EditButton/EditButton\";\nimport {AddInput} from \"components/AddInput/AddInput.styled\";\nimport {EntityContainer} from \"components/EntityContainer/EntityContainer.styled\";\nimport {AddingContainer} from \"components/AddingContainer/AddingContainer.styled\";\nimport {EntityName} from \"components/EntityName/EntityName.styled\";\nimport {AddButton} from \"components/AddButton/AddButton\";\nimport {nanoid} from \"@reduxjs/toolkit\";\nimport {useActions} from \"hooks/useActions\";\nimport {RemoveButton} from \"components/RemoveButton/RemoveButton\";\nimport {Hr} from \"components/Hr/Hr.styled\";\n\n\nexport const Stuff = () => {\n    const TYPE = \"stuff\";\n\n    const stuff = useAppSelector(state => state.filling.stuff)\n    const {add, remove} = useActions()\n\n    const [isEdit, setIsEdit] = useState(false)\n\n    const [stuffName, setStuffName] = useState(\"\")\n    const [stuffCount, setStuffCount] = useState(\"\")\n\n    const stuffIsFilled = () => stuffName && stuffCount;\n\n    const enterTrack = (key: string) => {\n        if(key === 'Enter') {\n            saveTrack();\n        }\n    }\n\n    const saveTrack = () => {\n        if(stuffIsFilled()) {\n            add({\n                fillingType: TYPE,\n                value: {\n                    id: nanoid(),\n                    name: stuffName,\n                    count: stuffCount,\n                }\n            })\n            setStuffName(\"\")\n            setStuffCount(\"\")\n        }\n\n    }\n    const removeStuff = (stuffId: string) => {\n        remove({fillingType: TYPE, value: stuffId})\n    }\n    return (\n        <EditBlock>\n\n            <Title>Инвентарь</Title>\n            {\n                stuff.map(s =>\n                    <div key={s.id}>\n                        <EntityContainer>\n                            <EntityName>{s.name} <b>x</b> {s.count}</EntityName>\n                            <RemoveButton removeFunc={() => removeStuff(s.id)} editState={isEdit}/>\n                        </EntityContainer>\n                        <Hr/>\n                    </div>\n\n                )\n            }\n\n            <AddingContainer editMode={isEdit}>\n                <AddInput type=\"text\"\n                          placeholder=\"Инвентарь...\"\n                          value={stuffName}\n                          onKeyUp={(e) => enterTrack(e.key) }\n                          onChange={(e) => setStuffName(e.target.value)}/>\n                <AddInput type=\"text\"\n                          placeholder=\"Количество...\"\n                          value={stuffCount}\n                          onKeyUp={(e) => enterTrack(e.key) }\n                          onChange={(e) => setStuffCount(e.target.value)}/>\n                <AddButton saveFunc={saveTrack}/>\n            </AddingContainer>\n\n            <EditButton editStateFunc={() => setIsEdit(!isEdit)} />\n        </EditBlock>\n    );\n};\n\n","import React, {useState} from 'react';\nimport {useAppSelector} from \"hooks/useAppSelector\";\nimport {Title} from \"components/Title/Title\";\nimport {EditButton} from \"components/EditButton/EditButton\";\nimport {EditBlock} from \"components/EditBlock/EditBlock\";\nimport {RemoveButton} from \"components/RemoveButton/RemoveButton\";\nimport {useActions} from \"hooks/useActions\";\nimport {AddButton} from \"components/AddButton/AddButton\";\nimport {nanoid} from \"@reduxjs/toolkit\";\nimport {AddInput} from \"components/AddInput/AddInput.styled\";\nimport {EntityContainer} from \"components/EntityContainer/EntityContainer.styled\";\nimport {AddingContainer} from \"components/AddingContainer/AddingContainer.styled\";\nimport {EntityName} from \"components/EntityName/EntityName.styled\";\nimport {Hr} from \"components/Hr/Hr.styled\";\n\n\nexport const Food = () => {\n    const TYPE = \"food\";\n\n    const food = useAppSelector(state => state.filling.food)\n    const {add, remove} = useActions()\n\n    const [isEdit, setEdit] = useState(false)\n    const [foodName, setFoodName] = useState(\"\");\n    const [foodVolume, setFoodVolume] = useState(\"\");\n    const [foodCount, setFoodCount] = useState(\"\");\n\n    const foodIsFilled = () => foodName && (foodVolume || foodCount);\n\n    const enterFood = (key: string) => {\n        if(key === 'Enter') {\n            saveFood();\n        }\n    }\n\n    const saveFood = () => {\n        if(foodIsFilled()) {\n            add({\n                fillingType: TYPE,\n                value: {\n                    id: nanoid(),\n                    name: foodName,\n                    volume: foodVolume,\n                    count: foodCount\n                }\n            })\n\n            setFoodName(\"\")\n            setFoodVolume(\"\")\n            setFoodCount(\"\")\n        }\n    }\n\n    const removeFood = (foodId: string) => {\n        remove({\n            fillingType: TYPE,\n            value: foodId\n        })\n    }\n\n    return (\n        <EditBlock>\n            <Title>Еда</Title>\n\n            {\n                food.map(f =>\n                    <div key={f.id}>\n                        <EntityContainer key={f.id}>\n                            <EntityName>{f.name} {f.volume} <b>x</b> {f.count ?? 1}</EntityName>\n                            <RemoveButton removeFunc={() => removeFood(f.id)} editState={isEdit}/>\n                        </EntityContainer>\n                        <Hr/>\n                    </div>\n                )\n            }\n\n            <AddingContainer editMode={isEdit}>\n                <AddInput type=\"text\" placeholder={\"Название...\"}\n                           value={foodName}\n                           onKeyUp={(e) => enterFood(e.key) }\n                           onChange={(e) => setFoodName(e.target.value)}/>\n                <AddInput type=\"text\" placeholder={\"Объем (кг/л)\"}\n                           value={foodVolume}\n                           onKeyUp={(e) => enterFood(e.key) }\n                           onChange={(e) => setFoodVolume(e.target.value)}/>\n                <AddInput type=\"text\" placeholder={\"Количество\"}\n                           value={foodCount}\n                           onKeyUp={(e) => enterFood(e.key) }\n                           onChange={(e) => setFoodCount(e.target.value)}/>\n                <AddButton saveFunc={saveFood}/>\n            </AddingContainer>\n\n            <EditButton editStateFunc={() => setEdit(!isEdit)} />\n\n        </EditBlock>\n    );\n};\n\n","import React, {useState} from 'react';\nimport {useAppSelector} from \"hooks/useAppSelector\";\nimport {Title} from \"components/Title/Title\";\nimport {EditButton} from \"components/EditButton/EditButton\";\nimport {useActions} from \"hooks/useActions\";\nimport {nanoid} from \"@reduxjs/toolkit\";\nimport {RemoveButton} from \"components/RemoveButton/RemoveButton\";\nimport {EditBlock} from \"components/EditBlock/EditBlock\";\nimport {AddButton} from \"components/AddButton/AddButton\";\nimport {AddInput} from \"components/AddInput/AddInput.styled\";\nimport {EntityContainer} from \"components/EntityContainer/EntityContainer.styled\";\nimport {AddingContainer} from \"components/AddingContainer/AddingContainer.styled\";\nimport {EntityName} from \"components/EntityName/EntityName.styled\";\nimport {Hr} from \"components/Hr/Hr.styled\";\n\nexport const Music = () => {\n    const TYPE = \"music\";\n\n    const music = useAppSelector(state => state.filling.music)\n    const {add, remove} = useActions()\n\n    const [isEdit, setIsEdit] = useState(false)\n    const [author, setAuthor] = useState(\"\")\n    const [track, setTrack] = useState(\"\")\n\n    const trackIsFilled = () => track && author;\n\n    const enterTrack = (key: string) => {\n        if(key === 'Enter') {\n            saveTrack();\n        }\n    }\n\n    const saveTrack = () => {\n        if(trackIsFilled()) {\n            add({\n                fillingType: TYPE,\n                value: {\n                    id: nanoid(),\n                    author: author,\n                    name: track,\n                }\n            })\n            setAuthor(\"\")\n            setTrack(\"\")\n        }\n\n    }\n    const removeTrack = (trackId: string) => {\n        remove({fillingType: TYPE, value: trackId})\n    }\n\n    return (\n        <EditBlock>\n\n            <Title>Музыка</Title>\n\n            {\n                music.map(m =>\n                    <div key={m.id}>\n                        <EntityContainer>\n                            <EntityName><b>{m.author}</b> {m.name}</EntityName>\n                            <RemoveButton removeFunc={() => removeTrack(m.id)} editState={isEdit}/>\n                        </EntityContainer>\n                        <Hr/>\n                    </div>\n\n                )\n            }\n\n            <AddingContainer editMode={isEdit}>\n                <AddInput type=\"text\"\n                            placeholder=\"Автор...\"\n                            value={author}\n                            onKeyUp={(e) => enterTrack(e.key) }\n                            onChange={(e) => setAuthor(e.target.value)}/>\n                <AddInput type=\"text\"\n                            placeholder=\"Трек...\"\n                            value={track}\n                            onKeyUp={(e) => enterTrack(e.key) }\n                            onChange={(e) => setTrack(e.target.value)}/>\n                <AddButton saveFunc={saveTrack}/>\n            </AddingContainer>\n\n            <EditButton editStateFunc={() => setIsEdit(!isEdit)} />\n        </EditBlock>\n    );\n};\n\n","import styled, { keyframes } from \"styled-components\";\n\nconst shroudAnimation = keyframes`\n  0%  {background-color: transparent;}\n  100%{background-color: darkred}\n`\nexport const Shroud = styled.div`\n  width: 100%;\n  height: 100%;\n  background-color: transparent;\n\n  animation-name: ${shroudAnimation};\n  animation-duration: 10s;\n  animation-iteration-count: infinite;\n  animation-direction: alternate;\n\n  border-radius: 50%;\n  &:hover {\n    animation-duration: 0s;\n  }\n\n  //@media(max-width: 1400px) {\n  //  width: 7em;\n  //}\n`\n\nexport const House = styled.div`\n  background-image: url(\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/918e7688-7d3a-406e-ab9c-50e96c54e802/responsive-icons-svg-opt.png\");\n  width: 8em;\n  height: 8em;\n  position: fixed;\n  top: 10px;\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n  border: 2px solid darkred;\n  cursor: pointer;\n  \n  border-radius: 50%;\n\n  @media(max-width: 1400px) {\n    width: 7em;\n    height: 7em;\n  }\n\n  @media(max-width: 1000px) {\n    width: 6em;\n    height: 6em;\n  }\n  \n  @media(max-width: 800px) {\n    width: 5em;\n    height: 5em;\n  }\n\n  @media(max-width: 600px) {\n    width: 4em;\n    height: 4em;\n  }\n`\n","import React from 'react';\nimport {House, Shroud} from \"./HomeToy.styled\";\n\n\nexport const HomeToy = () => {\n    return (\n            <House>\n                <a href={\"./\"}><Shroud/></a>\n            </House>\n    );\n};\n\n","import React, {useState} from 'react';\nimport {useAppSelector} from \"hooks/useAppSelector\";\nimport {useActions} from \"hooks/useActions\";\nimport {nanoid} from \"@reduxjs/toolkit\";\nimport {EditBlock} from \"components/EditBlock/EditBlock\";\nimport {Title} from \"components/Title/Title\";\nimport {EntityContainer} from \"components/EntityContainer/EntityContainer.styled\";\nimport {EntityName} from \"components/EntityName/EntityName.styled\";\nimport {RemoveButton} from \"components/RemoveButton/RemoveButton\";\nimport {AddingContainer} from \"components/AddingContainer/AddingContainer.styled\";\nimport {AddInput} from \"components/AddInput/AddInput.styled\";\nimport {AddButton} from \"components/AddButton/AddButton\";\nimport {EditButton} from \"components/EditButton/EditButton\";\nimport {Hr} from \"components/Hr/Hr.styled\";\n\nexport const Note = () => {\n    const TYPE = \"note\";\n\n    const noteList = useAppSelector(state => state.filling.note)\n    const {add, remove} = useActions()\n\n    const [isEdit, setIsEdit] = useState(false)\n    const [note, setNote] = useState(\"\")\n\n\n    const trackIsFilled = () => note;\n\n    const enterNote = (key: string) => {\n        if(key === 'Enter') {\n            saveNote();\n        }\n    }\n\n    const saveNote = () => {\n        if(trackIsFilled()) {\n            add({\n                fillingType: TYPE,\n                value: {\n                    id: nanoid(),\n                    name: note,\n                }\n            })\n            setNote(\"\")\n        }\n\n    }\n    const removeNote = (noteId: string) => {\n        remove({fillingType: TYPE, value: noteId})\n    }\n\n    return (\n        <EditBlock>\n\n            <Title>Заметки</Title>\n\n            {\n                noteList.map(n =>\n                    <div key={n.id}>\n                        <EntityContainer>\n                            <EntityName>{n.name}</EntityName>\n                            <RemoveButton removeFunc={() => removeNote(n.id)} editState={isEdit}/>\n                        </EntityContainer>\n                        <Hr/>\n                    </div>\n\n                )\n            }\n\n            <AddingContainer editMode={isEdit}>\n                <AddInput type=\"text\"\n                          placeholder=\"Текст...\"\n                          value={note}\n                          onKeyUp={(e) => enterNote(e.key) }\n                          onChange={(e) => setNote(e.target.value)}/>\n                <AddButton saveFunc={saveNote}/>\n            </AddingContainer>\n\n            <EditButton editStateFunc={() => setIsEdit(!isEdit)} />\n        </EditBlock>\n    );\n};\n\n","import React, {FC, useEffect, useState} from 'react';\nimport {\n    Contacts,\n    HomeStyled,\n    Person,\n    PersonContainer,\n    PersonName,\n    PersonPhoto,\n    Phone,\n    Telegram,\n    Hat,\n    Timer,\n    Title,\n    PartyInfo,\n    SettingsLink,\n} from \"./Home.styled\";\nimport {newYearDate, CONTACT_PHONE, CONTACT_TELEGRAM, ADDRESS, MEETING_TIME} from \"utils/utils\";\nimport {useTimer} from \"react-timer-hook\";\nimport {useAppSelector} from \"hooks/useAppSelector\";\nimport Snowfall from 'react-snowfall'\nimport {Hr} from \"components/Hr/Hr.styled\";\nimport {useActions} from \"../../hooks/useActions\";\n\nexport const Home: FC = () => {\n    const { seconds, minutes, hours, days,} = useTimer({expiryTimestamp: newYearDate(), onExpire: () => console.log(\"expo\")})\n    const {set} = useActions()\n    const [loaded, setLoaded] = useState(false)\n    const [phoneShow, setPhoneShow] = useState(false)\n\n    const twoDigits = (num: number) => {\n        const stringNum = String(num);\n        return (stringNum.length > 1) ? stringNum : \"0\" + stringNum;\n    }\n\n    const personList = useAppSelector(state => state.filling.person)\n\n    useEffect(() => {\n        let storageData = localStorage.getItem(\"state\")\n        if(storageData) {\n            set(JSON.parse(storageData))\n            setLoaded(true)\n        }\n    }, [loaded])\n\n    return (\n        <HomeStyled>\n            <Title>Встречаем новый год!</Title>\n\n            <PartyInfo>\n                <div>Адрес: {ADDRESS}</div>\n                <Hr/>\n                <div>Время: {MEETING_TIME}</div>\n            </PartyInfo>\n\n            <Snowfall/>\n\n            <PersonContainer>\n                {\n                    personList.map(p =>\n                        <Person key={p.id}>\n                            <PersonPhoto src={p.photo} alt={p.name}/>\n                            <PersonName>{p.name}</PersonName>\n                        </Person>\n                    )\n                }\n\n            </PersonContainer>\n\n            <Timer>До нового года: {twoDigits(days)}д. {twoDigits(hours)}ч. {twoDigits(minutes)}м. {twoDigits(seconds)}с.</Timer>\n\n            <Contacts>\n                <SettingsLink href={\"/edit\"}/>\n                <Telegram href={CONTACT_TELEGRAM}/>\n                <Phone onClick={() => setPhoneShow((prev) => !prev)} phoneShow={phoneShow} phoneNumber={CONTACT_PHONE}/>\n            </Contacts>\n        </HomeStyled>\n    );\n};\n","import React, {useEffect, useState} from 'react';\n\nimport {EditStyled, Dump} from \"./Edit.styled\";\n\nimport {Person} from \"./Person/Person\";\nimport {Stuff} from \"./Stuff/Stuff\";\nimport {Food} from \"./Food/Food\";\nimport {Music} from \"./Music/Music\";\nimport {HomeToy} from \"components/HomeToy/HomeToy\";\nimport {Note} from \"./Note/Note\";\nimport {useAppSelector} from \"hooks/useAppSelector\";\nimport {useActions} from \"../../hooks/useActions\";\n\nexport const Edit = () => {\n\n\n    const allData = useAppSelector(state => state.filling)\n    const {set} = useActions()\n    const [loaded, setLoaded] = useState(false)\n    const dump = () => {\n\n        const a = document.createElement(\"a\");\n        a.href = URL.createObjectURL(new Blob([JSON.stringify(allData, null, 2)], {\n            type: \"text/plain\"\n        }));\n        a.setAttribute(\"download\", \"data.json\");\n        document.body.appendChild(a);\n        a.click();\n        document.body.removeChild(a);\n    }\n\n    useEffect(() => {\n        let storageData = localStorage.getItem(\"state\")\n        if(storageData) {\n            set(JSON.parse(storageData))\n            setLoaded(true)\n        }\n    },[loaded])\n\n    return (\n        <EditStyled>\n            <HomeToy/>\n            <Person/>\n            <Stuff/>\n            <Food/>\n            <Music/>\n            <Note/>\n\n            <Dump onClick={dump}/>\n        </EditStyled>\n    );\n};\n\n","import React from 'react';\nimport {Switch, Route, Redirect} from \"react-router-dom\";\nimport {routesList} from \"routes\";\n\n\nexport const AppRouter = () => {\n    return (\n        <Switch>\n            {\n                routesList.map(r => <Route key={r.path} {...r}/> )\n            }\n            <Redirect to={\"/\"}/>\n        </Switch>\n\n    );\n};\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport {AppRouter} from \"./components/AppRouter\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport { Provider } from 'react-redux';\nimport {store} from \"./store\";\nimport {Home} from \"./pages/Home/Home\";\n\nReactDOM.render(\n  <Provider store={store}>\n      <BrowserRouter>\n          <AppRouter />\n      </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n// reportWebVitals();\n"],"sourceRoot":""}